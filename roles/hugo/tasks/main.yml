---

- name: start hugo
  kubernetes.core.k8s:
    definition:
      kind:                       Deployment
      apiVersion:                 apps/v1
      metadata:
        name:                     '{{ ansible_operator_meta.name }}-nginx'
        namespace:                '{{ ansible_operator_meta.namespace }}'
      spec:
        replicas:                 "{{ replicas_size }}"
        selector:
          matchLabels:
            app:                  hugo
        template:
          metadata:
            labels:
              app:                hugo
          spec:
            initContainers:
            - name:               '{{ ansible_operator_meta.name }}-init-container'
              image:              docker.io/olafradicke/hugo:0.0.3
              env:
              - name:             ARCHIVE_URL
                value:            "{{ archive.url }}"
              - name:             ARCHIVE_FORMAT
                value:            "{{ archive.format }}"
              - name:             ARCHIVE_DIR
                value:            "{{ archive.url }}"
              - name:             ARCHIVE_HUGO_DIR
                value:            "{{ archive.hugo_url }}"
              - name:             HUGO_BASE_URL=
                value:            "https://olaf-radicke.de"
              - name:             TARGET_DIR=
                value:            "{{ static_html_dir }}"
              volumeMounts:
              - name:             static_html
                mountPath:        "{{ static_html_dir }}"
            containers:
            - name:               nginx
              image:              "docker.io/nginxinc/nginx-unprivileged"
              ports:
                - name:           web-ui
                  containerPort:  8080
              volumeMounts:
              - name:             static_html
                mountPath:        "{{ static_html_dir }}"
            volumes:
            - name:               static_html
              emptyDir:           {}


- name: start hugo service
  kubernetes.core.k8s:
    definition:
      apiVersion:                 v1
      kind:                       Service
      metadata:
        name:                     '{{ ansible_operator_meta.name }}'
        namespace:                '{{ ansible_operator_meta.namespace }}'
      spec:
        selector:
          app.kubernetes.io/name: '{{ ansible_operator_meta.name }}-nginx'
        ports:
          - protocol:             TCP
            port:                 80
            targetPort:           web-ui
            type:                 ClusterIP